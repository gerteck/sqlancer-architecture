
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"sticky":""}},[_c('navbar',{attrs:{"type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"/index.html","title":"Home"}},[_v("SQLancer Main")])]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/databaseProvider.html"}},[_v("DatabaseProvider")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/globalState.html"}},[_v("GlobalState")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/query.html"}},[_v("Query, SQLQueryAdapter")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/statementExecutor.html"}},[_v("StatementExecutor")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/SQLite.html"}},[_v("SQLite")])])])],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('div',{attrs:{"id":"content-wrapper"}},[_m(0),_v(" "),_m(1),_v(" "),_m(2),_v(" "),_c('p',[_v("The SQLQueryAdapter class is a concrete implementation of the Query interface, designed to execute SQL queries and handle their results. It is used extensively in SQLancer to interact with the database, execute queries, and manage expected errors.")]),_v(" "),_m(3),_v(" "),_c('div',{directives:[{name:"mermaid",rawName:"v-mermaid"}],staticClass:"mermaid"},[_v("\nsequenceDiagram\n    participant GlobalState\n    participant SQLQueryAdapter\n    participant Statement\n    participant PreparedStatement\n    participant ResultSet\n    participant SQLancerResultSet\n    participant ExpectedErrors\n\n    GlobalState->>SQLQueryAdapter: execute(globalState, fills)\n    SQLQueryAdapter->>Statement: createStatement() or prepareStatement(fills[0])\n    alt If prepared statement\n        SQLQueryAdapter->>PreparedStatement: setString(i, fills[i])\n        PreparedStatement->>SQLQueryAdapter: execute()\n    else\n        Statement->>SQLQueryAdapter: execute(query)\n    end\n    alt If successful\n        SQLQueryAdapter->>GlobalState: Return true\n    else\n        SQLQueryAdapter->>ExpectedErrors: checkException(e)\n        ExpectedErrors-->>SQLQueryAdapter: Return if error is expected\n        SQLQueryAdapter->>GlobalState: Return false\n    end\n\n    GlobalState->>SQLQueryAdapter: executeAndGet(globalState, fills)\n    SQLQueryAdapter->>Statement: createStatement() or prepareStatement(fills[0])\n    alt If prepared statement\n        SQLQueryAdapter->>PreparedStatement: setString(i, fills[i])\n        PreparedStatement->>SQLQueryAdapter: executeQuery()\n    else\n        Statement->>SQLQueryAdapter: executeQuery(query)\n    end\n    alt If successful\n        SQLQueryAdapter->>ResultSet: Wrap in SQLancerResultSet\n        SQLancerResultSet-->>GlobalState: Return result\n    else\n        SQLQueryAdapter->>ExpectedErrors: checkException(e)\n        ExpectedErrors-->>SQLQueryAdapter: Return if error is expected\n        SQLQueryAdapter-->>GlobalState: Return null\n    end\n")])]),_v(" "),_c('scroll-top-button')],1)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"query"}},[_v("Query"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#query","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The Query class represents a single query string and supports several methods, such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("getQueryString")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("couldAffectSchema")]),_v(" (can add or delete tables), and establishes the abstract method "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("execute")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"sqlqueryadapter"}},[_v("SQLQueryAdapter"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#sqlqueryadapter","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Query Execution")]),_v(": The GlobalState calls execute() or executeAndGet() on the SQLQueryAdapter to execute a query. The SQLQueryAdapter creates a Statement or PreparedStatement depending on whether placeholders (fills) are provided. The query is executed using the Statement or PreparedStatement. If the query is successful, the result is returned to the GlobalState. If the query fails, the SQLQueryAdapter checks if the error is expected using the ExpectedErrors class.")])}
}];
  